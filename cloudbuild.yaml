steps:

# Build Docker Image
- name: 'gcr.io/cloud-builders/docker'
  args:
    [
      'build',
      '-t',
      'asia-south1-docker.pkg.dev/ci-cd-467305/ml-models/iris-model:$SHORT_SHA',
      '.'
    ]

# Push Docker Image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args:
    [
      'push',
      'asia-south1-docker.pkg.dev/ci-cd-467305/ml-models/iris-model:$SHORT_SHA'
    ]

# Run Docker Container to Train and Save Model Artifacts
- name: 'gcr.io/cloud-builders/docker'
  args:
    [
      'run',
      '--rm',
      '-v',
      '/workspace/models:/app/models',
      'asia-south1-docker.pkg.dev/ci-cd-467305/ml-models/iris-model:$SHORT_SHA',
      'python',
      'train.py'
    ]

# Copy Trained Model to GCS Bucket
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: bash
  args:
    - -c
    - |
      echo "Uploading trained model to GCS..."
      gsutil cp -r /workspace/models gs://ml-cicd-bucket/models

# Register Model with Vertex AI
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: bash
  args:
    - -c
    - |
      echo "Registering model to Vertex AI..."
      gcloud ai models upload \
        --region=us-central1 \
        --display-name=iris-classifier \
        --container-image-uri=asia-south1-docker.pkg.dev/ci-cd-467305/ml-models/iris-model:$SHORT_SHA \
        --artifact-uri=gs://ml-cicd-bucket/models 

# Create a Cloud Deploy release to trigger the deployment pipeline
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - deploy
    - releases
    - create
    - 'iris-release-$SHORT_SHA'
    - '--delivery-pipeline=iris-model-pipeline'
    - '--region=asia-south1' 
    - '--source=.'
    - '--images=iris-model-image=asia-south1-docker.pkg.dev/ci-cd-467305/ml-models/iris-model:$SHORT_SHA'

options:
  substitutionOption: ALLOW_LOOSE

images:
  - 'asia-south1-docker.pkg.dev/ci-cd-467305/ml-models/iris-model:$SHORT_SHA'

logsBucket: 'gs://ml-cicd-bucket/logs'